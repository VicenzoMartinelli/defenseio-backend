// <auto-generated />
using System;
using DefenseIO.Services.Contracting.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace DefenseIO.Services.Contracting.Data.Migrations
{
    [DbContext(typeof(ContractingContext))]
    [Migration("20191115143541_provider-rating-control")]
    partial class providerratingcontrol
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("DefenseIO.Domain.Domains.Contracting.Entities.AttendedModality", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("BasicValue");

                    b.Property<string>("Method")
                        .IsRequired();

                    b.Property<Guid>("ModalityId");

                    b.Property<bool>("MultiplyByEmployeesNumber")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(false);

                    b.Property<Guid>("ProviderUserId");

                    b.HasKey("Id");

                    b.HasIndex("ModalityId");

                    b.HasIndex("ProviderUserId");

                    b.ToTable("AttendedModality");
                });

            modelBuilder.Entity("DefenseIO.Domain.Domains.Contracting.Entities.ContractingUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(80);

                    b.Property<string>("AddressNumber")
                        .HasMaxLength(8);

                    b.Property<DateTime>("BirthDate");

                    b.Property<string>("BrazilianInscricaoEstadual")
                        .HasMaxLength(15);

                    b.Property<string>("Burgh")
                        .IsRequired()
                        .HasMaxLength(80);

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasMaxLength(15);

                    b.Property<Guid>("CityId");

                    b.Property<string>("Complement")
                        .HasMaxLength(60);

                    b.Property<double>("CurrentRating")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(3.0);

                    b.Property<string>("DocumentIdentifier");

                    b.Property<string>("Email");

                    b.Property<double>("Latitude");

                    b.Property<DateTime>("LicenseValidity");

                    b.Property<double>("Longitude");

                    b.Property<string>("Name")
                        .HasMaxLength(160);

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("Rg");

                    b.Property<int>("Type");

                    b.HasKey("Id");

                    b.ToTable("ContractingUser");
                });

            modelBuilder.Entity("DefenseIO.Domain.Domains.Contracting.Entities.Modality", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .HasMaxLength(80);

                    b.Property<string>("Key")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Modality");

                    b.HasData(
                        new
                        {
                            Id = new Guid("53468f99-518e-45b3-8a41-4e4343be8299"),
                            Description = "Segurança pessoal",
                            Key = "Personal"
                        },
                        new
                        {
                            Id = new Guid("fea53619-b1d7-4c96-b900-af9b7e259067"),
                            Description = "Escolta armada",
                            Key = "ArmedEscort"
                        },
                        new
                        {
                            Id = new Guid("c445e5d5-f924-4b0a-a9b6-b4ba1f0761e9"),
                            Description = "Transporte de valores",
                            Key = "ValuesTransportation"
                        },
                        new
                        {
                            Id = new Guid("d5c65e35-71af-4153-af8a-822d8ae658d8"),
                            Description = "Segurança patrimonial",
                            Key = "AssetSurveillance"
                        });
                });

            modelBuilder.Entity("DefenseIO.Domain.Domains.Contracting.Entities.Solicitation.Solicitation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AttendedModalityId");

                    b.Property<Guid>("ClientId");

                    b.Property<DateTime?>("EndDateTime");

                    b.Property<double>("FinalCost");

                    b.Property<double?>("KiloMeters");

                    b.Property<int>("ModalityType");

                    b.Property<int?>("NumberOfEmployeers");

                    b.Property<Guid>("ProviderId");

                    b.Property<string>("Remark")
                        .HasMaxLength(1000);

                    b.Property<DateTime>("SolicitationDate");

                    b.Property<DateTime>("StartDateTime");

                    b.Property<int>("Status");

                    b.Property<TimeSpan?>("TurnOver");

                    b.Property<TimeSpan?>("TurnStart");

                    b.HasKey("Id");

                    b.HasIndex("AttendedModalityId");

                    b.HasIndex("ClientId");

                    b.HasIndex("ProviderId");

                    b.ToTable("Solicitation");
                });

            modelBuilder.Entity("DefenseIO.Domain.Domains.Contracting.Entities.Solicitation.SolicitationEvaluation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("ClientId");

                    b.Property<string>("Comment")
                        .HasMaxLength(1000);

                    b.Property<double>("EfficiencyGrade");

                    b.Property<DateTime>("EvaluationDate");

                    b.Property<double>("ExperienceGrade");

                    b.Property<Guid>("ProviderId");

                    b.Property<Guid>("SolicitationId");

                    b.Property<double>("SpeedGrade");

                    b.HasKey("Id");

                    b.HasIndex("SolicitationId")
                        .IsUnique();

                    b.ToTable("SolicitationEvaluation");
                });

            modelBuilder.Entity("DefenseIO.Domain.Domains.Contracting.Entities.AttendedModality", b =>
                {
                    b.HasOne("DefenseIO.Domain.Domains.Contracting.Entities.Modality", "Modality")
                        .WithMany()
                        .HasForeignKey("ModalityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DefenseIO.Domain.Domains.Contracting.Entities.ContractingUser", "Provider")
                        .WithMany()
                        .HasForeignKey("ProviderUserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("DefenseIO.Domain.Domains.Contracting.Entities.Solicitation.Solicitation", b =>
                {
                    b.HasOne("DefenseIO.Domain.Domains.Contracting.Entities.AttendedModality", "AttendedModality")
                        .WithMany()
                        .HasForeignKey("AttendedModalityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DefenseIO.Domain.Domains.Contracting.Entities.ContractingUser", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DefenseIO.Domain.Domains.Contracting.Entities.ContractingUser", "Provider")
                        .WithMany()
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.OwnsOne("DefenseIO.Domain.Domains.Users.Location", "Location", b1 =>
                        {
                            b1.Property<Guid>("SolicitationId");

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasMaxLength(80);

                            b1.Property<string>("AddressNumber")
                                .HasMaxLength(8);

                            b1.Property<string>("Burgh")
                                .IsRequired()
                                .HasMaxLength(80);

                            b1.Property<string>("Cep")
                                .IsRequired()
                                .HasMaxLength(15);

                            b1.Property<Guid>("CityId");

                            b1.Property<string>("Complement")
                                .HasMaxLength(60);

                            b1.Property<double>("Latitude");

                            b1.Property<double>("Longitude");

                            b1.HasKey("SolicitationId");

                            b1.ToTable("Solicitation");

                            b1.HasOne("DefenseIO.Domain.Domains.Contracting.Entities.Solicitation.Solicitation")
                                .WithOne("Location")
                                .HasForeignKey("DefenseIO.Domain.Domains.Users.Location", "SolicitationId")
                                .OnDelete(DeleteBehavior.Cascade);
                        });
                });

            modelBuilder.Entity("DefenseIO.Domain.Domains.Contracting.Entities.Solicitation.SolicitationEvaluation", b =>
                {
                    b.HasOne("DefenseIO.Domain.Domains.Contracting.Entities.Solicitation.Solicitation", "Solicitation")
                        .WithOne("Evaluation")
                        .HasForeignKey("DefenseIO.Domain.Domains.Contracting.Entities.Solicitation.SolicitationEvaluation", "SolicitationId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
